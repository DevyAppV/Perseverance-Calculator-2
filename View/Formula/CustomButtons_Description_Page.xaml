<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="Perseverance_Calculator_2.View.Formula.CustomButtons_Description_Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Perseverance_Calculator_2.View.Formula"
    xmlns:logic="using:Perseverance_Calculator_2.Logic"
    xmlns:xaml="using:Perseverance_Calculator_2.Logic.Xaml"
    xmlns:formula="using:Perseverance_Calculator_2.Model.Formula"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid>
        <Grid.Resources>
            <ResourceDictionary>

                <ResourceDictionary.MergedDictionaries>
                    <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                    <ResourceDictionary Source="ms-appx:///Theme/MainTheme.xaml"/>
                </ResourceDictionary.MergedDictionaries>

            </ResourceDictionary>
        </Grid.Resources>
        <Grid Background="{StaticResource BackgroundColor_Main}">

            <!--<StackPanel Orientation="Vertical">
            <ItemsControl x:Name="CustomButtons_Description_ItemsControl">
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="formula:CustomButtons">-->
            <ScrollViewer VerticalScrollMode="Auto" HorizontalScrollMode="Auto" HorizontalScrollBarVisibility="Auto">
                <ScrollViewer.Resources>
                    <xaml:StringToInt_BindBack x:Key="StringToIntConverter" />
                    <xaml:StringToString_Bindback x:Key="StringToStringConverter" />
                </ScrollViewer.Resources>

                <StackPanel Orientation="Vertical" Margin="25">
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="3"></Setter>
                            <Setter Property="Background" Value="{StaticResource FormulaButton_BackgroundColor}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource FormulaButton_ForegroundColor}"></Setter>
                        </Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Margin" Value="3"></Setter>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="8"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource CustomButtonText_ForegroundColor}"></Setter>
                        </Style>
                    </StackPanel.Resources>
                    <StackPanel Orientation="Horizontal">
                        <Button FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Content="Get Variables" Click="GetVariables_Button_Click"></Button>
                        <Button FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Content="Solve and Set As Button" Click="SolveAndSetASButton_Button_Click"></Button>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="Formula Name:" VerticalAlignment="Top"></TextBlock>
                        <TextBlock FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Foreground="{StaticResource DefaultText_ForgroundColor}" Text="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.Name, Mode=OneWay}"  BringIntoViewRequested="TextBox_BringIntoViewRequested"></TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="New Formula Name:" VerticalAlignment="Top"></TextBlock>
                        <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" IsSpellCheckEnabled="False" x:Name="NewFormulaName_Tbox" Text="" PlaceholderText="New Formula Name" AcceptsReturn="False" BringIntoViewRequested="TextBox_BringIntoViewRequested"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="Formula:" VerticalAlignment="Top"></TextBlock>
                        <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" IsSpellCheckEnabled="False" Text="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.Formula_Eq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyUp="FormulaEQ_TextBox_KeyUp" PlaceholderText="Formula" AcceptsReturn="True" BringIntoViewRequested="TextBox_BringIntoViewRequested"></TextBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="Rearranged Formula Before Calculation:" VerticalAlignment="Top"></TextBlock>
                        <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Foreground="{StaticResource DefaultText_ForgroundColor}" Text="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.RearrangedFormula_BeforCalculation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" PlaceholderText="Rearranged Formula Before Calculation" IsSpellCheckEnabled="False" MaxWidth="1200" BringIntoViewRequested="TextBox_BringIntoViewRequested"></TextBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="Solution:" VerticalAlignment="Top"></TextBlock>
                        <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" IsSpellCheckEnabled="False" Text="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.Solution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Solution" AcceptsReturn="True" BringIntoViewRequested="TextBox_BringIntoViewRequested"></TextBox>
                    </StackPanel>


                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="Use:" VerticalAlignment="Top"></TextBlock>
                        <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" IsSpellCheckEnabled="False" Foreground="{StaticResource DefaultText_ForgroundColor}" Text="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Use, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" BringIntoViewRequested="TextBox_BringIntoViewRequested"></TextBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="Description:" VerticalAlignment="Top"></TextBlock>
                        <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" IsSpellCheckEnabled="False" Text="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" PlaceholderText="Description" BringIntoViewRequested="TextBox_BringIntoViewRequested"></TextBox>

                    </StackPanel>



                    <CheckBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" x:Name="IsIgnoreCol_CheckBox" Unchecked="IsIgnoreCol_CheckBox_Unchecked" Checked="IsIgnoreCol_CheckBox_Checked" Content="Is there a column or parameter to ignore when 'Get Variable' is clicked?" IsChecked="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.IsIgnoreCol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                    <StackPanel x:Name="IsIgnoreCol_StackPanel" Margin="25" Background="{StaticResource IsIgnoreCol_StackPanel_BackgroundColor}" Visibility="Collapsed">


                        <CheckBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Content="Should 'parameter columns to ignore,' ignore all variables? " IsChecked="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.IgnoreAllVar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                        <CheckBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Content="Can ignored variable set variable values during calculation?" IsChecked="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.ParamValCanBeSet_DuringCalc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>


                        <TextBlock FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="Variables to ignore in the ignored parameter columns(s):"></TextBlock>
                        <Button FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Content="Add Variables to ignore" Click="AddToVariablesToIgnore_Button_Click"></Button>
                        <StackPanel>
                            <ItemsControl ItemsSource="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.VariablesToIgnore, Mode=OneWay}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="xaml:StringBinding">
                                        <StackPanel Orientation="Horizontal">
                                            <Button FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Content="X" Click="RemoveVariablesToIgnore_Button_Click" Tag="{x:Bind Mode=OneWay}"></Button>
                                            <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" x:Name="VarToIgnore_Tbox" Text="{x:Bind Val, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsSpellCheckEnabled="False"></TextBox>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>

                        <TextBlock FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="Parameter columns to ignore (starting from 0):"></TextBlock>
                        <Button FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Content="Add columns to ignore" Click="AddToColumnsToIgnore_Button_Click"></Button>
                        <StackPanel>
                            <ItemsControl ItemsSource="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.ColumnsToIgnore, Mode=OneWay}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="xaml:IntBinding">
                                        <StackPanel Orientation="Horizontal">
                                            <Button FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Content="X" Click="RemoveColumnsToIgnore_Button_Click" Tag="{x:Bind Mode=OneWay}"></Button>
                                            <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="{Binding Val, Mode=TwoWay, Converter={StaticResource StringToIntConverter}, UpdateSourceTrigger=PropertyChanged}" IsSpellCheckEnabled="False"></TextBox>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </StackPanel>
                    <!--<TextBlock Text="Solution Grid"></TextBlock>
                <ScrollViewer HorizontalScrollMode="Auto">
                    <StackPanel Orientation="Vertical">
                        <ItemsControl ItemsSource="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.SolutionGrid_MultiArray}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>

                                    <StackPanel Orientation="Horizontal">
                                        <ItemsControl ItemsSource="{x:Bind}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate x:DataType="x:String">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBox Text="{x:Bind}" MinWidth="100" MaxWidth="100" AcceptsReturn="True" BringIntoViewRequested="TextBox_BringIntoViewRequested"></TextBox>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>-->
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Add a variable to variable list" Click="AddVariableToVariableList_Button_Click"></Button>
                        <Button Content="Set Updates" Click="SetVariables_Button_Click"></Button>
                    </StackPanel>

                    <ScrollViewer HorizontalScrollMode="Auto">
                        <StackPanel Orientation="Vertical">
                            <ItemsControl ItemsSource="{x:Bind logic:Main_Logic.selection_Model.CustomButtons_Description.Formula_Instance.Variable_List, Mode=OneWay}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="formula:Variable">
                                        <Grid>
                                            <Grid.Resources>
                                                <Style TargetType="Button">
                                                    <Setter Property="Margin" Value="3"></Setter>
                                                </Style>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="Margin" Value="3"></Setter>
                                                </Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Margin" Value="8"></Setter>
                                                </Style>
                                            </Grid.Resources>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"></ColumnDefinition>
                                                <ColumnDefinition Width="100"></ColumnDefinition>
                                                <ColumnDefinition Width="1.5*"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Button FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Grid.Column="0" VerticalAlignment="Top" Content="X" Click="RemoveVar_Button_Click" Tag="{x:Bind Mode=OneWay}"></Button>
                                            <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="{x:Bind Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" TextWrapping="Wrap" IsSpellCheckEnabled="False"></TextBox>
                                            <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="{x:Bind VarValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsSpellCheckEnabled="False" KeyUp="VariableValue_TextBox_KeyUp" Grid.Column="2" AcceptsReturn="True" BringIntoViewRequested="TextBox_BringIntoViewRequested"></TextBox>
                                            <TextBox FontSize="{x:Bind logic:Main_Logic.main_Model.FontSize, Mode=OneWay}" Text="{x:Bind Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsSpellCheckEnabled="False" Grid.Column="3" AcceptsReturn="True" BringIntoViewRequested="TextBox_BringIntoViewRequested"></TextBox>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ScrollViewer>
                </StackPanel>

                <!--</DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>-->




                <!--</StackPanel>-->
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>
